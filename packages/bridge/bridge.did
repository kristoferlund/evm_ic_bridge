type EthPoolLiquidityPositionDto = record {
  last_claimed_fee_per_token : text;
  amount : text;
};
type HttpError = record { code : nat16; message : text; details : opt text };
type InitArgs = record {
  ecdsa_key_id : text;
  siwe_provider_canister : text;
  eth_min_confirmations : nat64;
  evm_rpc_canister : text;
};
type Result = variant { Ok : EthPoolLiquidityPositionDto; Err : HttpError };
type Result_1 = variant { Ok : UserDto; Err : HttpError };
type UserDto = record { "principal" : principal; eth_address : opt text };
service : (InitArgs) -> {
  eth_pool_create_position : (text) -> (Result) query;
  user_create : () -> (Result_1);
  user_register_eth_address : () -> (Result_1);
}
